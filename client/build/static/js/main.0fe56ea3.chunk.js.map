{"version":3,"sources":["Components/Blogs.js","Actions/types.js","Actions/messageActions.js","Components/Contact.js","Components/Home.js","Components/Nav.js","Components/Footer.js","Components/Admin.js","Reducers/messageReducer.js","Reducers/authReducer.js","Reducers/errorReducer.js","Reducers/index.js","store.js","Actions/errorActions.js","Actions/authActions.js","App.js","reportWebVitals.js","index.js"],"names":["Blogs","src","alt","id","Component","SEND_MESSAGE","GET_MESSAGES","DELETE_MESSAGE","MESSAGES_LOADING","USER_LOADING","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_SUCCESS","REGISTER_FAIL","GET_ERRORS","CLEAR_ERRORS","setMessagesLoading","type","Contact","props","handleEmail","event","setState","email","target","value","handleSubject","subject","handleMessage","message","handleSubmit","preventDefault","alert","newMessage","state","sendMessage","className","onSubmit","this","for","placeholder","onChange","cols","rows","connect","dispatch","axios","post","then","res","payload","data","Home","href","class","Nav","isOpen","handleToggle","to","onClick","Footer","Admin","onDeleteClick","deleteMessage","getMessages","messages","map","_id","bind","get","delete","initialState","loading","token","localStorage","getItem","isAuthenticated","isLoading","user","msg","status","combineReducers","action","filter","error","auth","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","returnErrors","tokenConfig","getState","config","headers","App","catch","err","response","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fe56ea3.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class Blogs extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <img src = \"images/blogs.jpg\" alt = \"Blogs\" id = \"blogs_image\" />\r\n                <h1 id = \"blogs_heading\">Blogs</h1>\r\n                <p id =\"about_blogs\">\r\n                    In case you were wondering 'but why Oxymusic?' this is for you.\r\n                    For a long time now,music players\r\n                    have been largely over-engineered with a lot of features we don't need and\r\n                    lacking those that we wish to have.\r\n                    Oxymusic distills down to only the most essential features with more to be\r\n                    added on  users' request and/or necessity dictating.That's it.That's all there is\r\n                    to it.\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Blogs\r\n","export const SEND_MESSAGE = 'SEND_MESSAGE';\r\nexport const GET_MESSAGES = 'GET_MESSAGES';\r\nexport const DELETE_MESSAGE = 'DELETE_MESSAGE';\r\nexport const MESSAGES_LOADING = 'MESSAGES_LOADING';\r\n\r\n//Auth Actions\r\nexport const USER_LOADING = \"USER_LOADING\"\r\nexport const USER_LOADED =\"USER_LOADED\"\r\nexport const AUTH_ERROR =\"AUTH_ERROR\"\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\"\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\"\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\"\r\nexport const GET_ERRORS = \"GET_ERRORS\"\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\"\r\n ","import axios from 'axios';\r\nimport { SEND_MESSAGE ,GET_MESSAGES ,DELETE_MESSAGE ,MESSAGES_LOADING} from './types'\r\n\r\nexport const getMessages = () => dispatch => {\r\n    dispatch(setMessagesLoading());\r\n    axios.\r\n    get('/api/contact_message')\r\n    .then(res => \r\n        dispatch({type:GET_MESSAGES , payload: res.data})\r\n        );\r\n  \r\n};\r\n\r\nexport const deleteMessage = (id) =>dispatch => {\r\n axios.delete(`/api/contact_message/${id}`).then(res => \r\n    dispatch({\r\n        type:DELETE_MESSAGE,\r\n        payload:id})\r\n        );\r\n};\r\n\r\nexport const setMessagesLoading = () => {\r\n    return{\r\n       type:MESSAGES_LOADING\r\n    };\r\n};\r\n\r\n\r\nexport const sendMessage = message => dispatch => {\r\n   axios\r\n   .post('/api/contact_message' , message)\r\n   .then(res => \r\n    dispatch({\r\n        type : SEND_MESSAGE,\r\n         payload:res.data\r\n    })\r\n    )\r\n};","import React, { Component } from 'react'\r\n\r\n//import connect\r\nimport {connect} from 'react-redux'\r\n\r\n//import sendMessage action\r\nimport {sendMessage} from '../Actions/messageActions'\r\n\r\n\r\nexport class Contact extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n             email : \"\",\r\n             subject:\"\",\r\n             message:\"\",\r\n           //  name : \"\"\r\n        }\r\n    }\r\n\r\n    handleEmail = (event) =>{\r\n        this.setState({ email : event.target.value})\r\n    }\r\n    handleSubject = (event) =>{\r\n        this.setState({ subject : event.target.value})\r\n    }\r\n    handleMessage = (event) =>{\r\n        this.setState({ message : event.target.value})\r\n    }  \r\n    handleSubmit = (event) => {\r\n     event.preventDefault() \r\n     alert(\"Message send\")\r\n    \r\n\r\n     const newMessage = {\r\n         email:this.state.email,\r\n         subject:this.state.subject,\r\n         message:this.state.message\r\n     }\r\n\r\n     //Add message via addMessage action\r\n     this.props.sendMessage(newMessage);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <img src =\"images/contact_us.jpg\" alt =\"Contact Us\" \r\n                id= \"contact_us\"  id =\"contact_us_image\"/>\r\n\r\n                <h1 id =\"contact_us_title\">Contact Us</h1>\r\n            \r\n                <form className = \"form-submit\" onSubmit = {this.handleSubmit}>\r\n                    <label for = \"email\">Email</label>\r\n                    <input type = \"email\" \r\n                    id=\"email\" \r\n                    placeholder =\"Enter your Email\"\r\n                    value = {this.state.email} \r\n                    onChange = {this.handleEmail} />\r\n\r\n                    <label for = \"subject\">Subject</label>\r\n                    <input type = \"text\" \r\n                    id=\"subject\"\r\n                    placeholder =\"Subject\"\r\n                    value = {this.state.subject}\r\n                    onChange = {this.handleSubject}/>\r\n\r\n                    <label for = \"message\">Message</label>\r\n                    <textarea id = \"message\"\r\n                    placeholder =\"Enter your Message\" \r\n                        value = {this.state.message} \r\n                        onChange = {this.handleMessage} cols = \"30\" rows = \"10\">\r\n                    </textarea>\r\n\r\n                    <input type = \"submit\" value =\"Submit\" id=\"submit-button\" />\r\n                    \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    message : state.message\r\n});\r\n\r\nexport default connect(mapStateToProps , {sendMessage})(Contact);\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className = \"container\">\r\n                <div id = \"content\">\r\n                        <img src=\"images/hero_image.jpg\" alt=\"hero\" className =\"hero\" /> \r\n                        <h1 id = \"oxymusic\">Oxymusic</h1>\r\n                        <p className = \"about_oxymusic\">\r\n                            The music player app of the future.I'd tell you what the future is like,\r\n                            but i'll let you experience it instead.\r\n               \r\n                        </p>\r\n\r\n                        <h1 id = \"features\">Features</h1>\r\n                        <h3 className = \"features_heading\">Clean,Simple and Neat Design</h3>\r\n                        <p className = \"features_text\">\r\n                            Oxymusic's design philosophy is to have to a simple and clean user interface that is \r\n                            accessible and self-explanatory.You don't need to wonder what this button does,what this\r\n                            tab is for or after I click this then what.Just a simple,clean and neat design.\r\n                        </p>\r\n\r\n                        <h3 className = \"features_heading\">No Ads</h3>\r\n                        <p className = \"features_text\">\r\n                            Enjoy your music seamlessly.No more ads that \r\n                            you can't figure out how to dismiss or that make your device freeze  popping in every few minutes.\r\n                        </p>\r\n                        <h3 className = \"features_heading\">Easy to Use</h3>\r\n                        <p className = \"features_text\">\r\n                            Oxymusic has been designed with user-experience in mind.The intricacy\r\n                            in the engineering is wrapped up in a painless design  making \r\n                            it world class and fun to use.\r\n          \r\n                        </p>\r\n                        <a href = \"https://play.google.com/store/apps/details?id=com.oxymusic.myaudioplayer\" className = \"download-link\">  \r\n                        <button class = \"download_button\">Download</button>\r\n                        </a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport class Nav extends Component {\r\n    state = {\r\n        isOpen : false\r\n    }\r\n\r\n    handleToggle = () =>{\r\n        this.setState ({isOpen : !this.state.isOpen})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav>\r\n                <Link className =\"navStyle\" to = '/' id = \"logo\"><img src = \"images/headphones.png\" alt = \"headphones\" id = \"headphones\"/></Link>\r\n                <Link className =\"navStyle\" to = '/'><h1>Oxymusic</h1></Link>\r\n            \r\n                <button type = \"submit\"\r\n                onClick = {this.handleToggle}\r\n                id =\"hamburger-menu-button\"\r\n                >\r\n                <img src  = \"images/menu.png\"  id =\"hamburger-menu\"/>\r\n                </button>\r\n                </nav>\r\n                <div className =\"actual-links\">\r\n                    <ul className = {this.state.isOpen ? \"nav-links show-nav\" : \"nav-links\"} >  \r\n                    <li> <Link className =\"navStyle\" to = '/'><li>Home</li></Link></li>\r\n                    <li> <Link className =\"navStyle\" to = '/blogs'><li>Blogs</li></Link></li>\r\n                    <li><Link className =\"navStyle\" to = '/contact'><li>Contact</li></Link></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n               \r\n        )\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default Nav\r\n","import React, { Component } from 'react'\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className = \"footer\">\r\n\r\n                <h2 className = \"contact_developer\">Contact developer</h2>\r\n                <a href =\"https://twitter.com/_john_ngala\"><img src = \"images/twitter.png\"  alt = \"Twitter\" className = \"social-icons\"/></a>\r\n                <a href =\"https://www.instagram.com/_john_ng.a.la/\"><img src = \"images/instagram.png\" alt = \"Instagram\" className = \"social-icons\" /></a>\r\n                <a href =\"https://wa.me/254722882815\"><img src = \"images/whatsapp.png\" alt = \"Whatsapp\" className = \"social-icons\" /></a>\r\n                \r\n                <h3 className = \"developer\">@john ngala 2020</h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {getMessages ,deleteMessage } from '../Actions/messageActions';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Admin extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.getMessages();\r\n    }\r\n\r\n    onDeleteClick = (id) => {\r\n        this.props.deleteMessage(id);\r\n    }\r\n\r\n    render() {\r\n\r\n        const {messages} = this.props.message;\r\n\r\n        return (\r\n            <div className = \"sent_messages\">\r\n                <h1 className = \"admin-section\">Admin Section</h1>\r\n               <ul>\r\n                   {messages.map(({ _id , email ,subject ,message}) => (\r\n                      <li className = \"sent_message\">  {email ,subject ,message}  \r\n                            <button\r\n                                className = \"delete_message\"\r\n                                onClick = { this.onDeleteClick.bind(this,_id)}\r\n                                >Delete Message\r\n                            </button>\r\n                            <hr />\r\n\r\n                      </li>\r\n                   ))}\r\n               </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAdmin.propTypes = {\r\n    getMessages : PropTypes.func.isRequired,\r\n    message:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\nmessage: state.message //do not touch\r\n})\r\n\r\nexport default connect(mapStateToProps , {getMessages ,deleteMessage})(Admin)\r\n","import { SEND_MESSAGE ,GET_MESSAGES ,DELETE_MESSAGE , MESSAGES_LOADING} from '../Actions/types'\r\n\r\n\r\nconst initialState = {\r\n    messages : [] ,\r\n    loading :false\r\n}\r\n\r\nexport default function( state = initialState ,action) {\r\n    switch(action.type){\r\n        case GET_MESSAGES: {\r\n            return{\r\n                ...state ,\r\n                messages : action.payload,\r\n                loading:false\r\n            }\r\n        }\r\n\r\n        case MESSAGES_LOADING: {\r\n            return{\r\n                ...state ,\r\n                loading:true\r\n            }\r\n        }\r\n\r\n        case DELETE_MESSAGE: {\r\n            return{\r\n                ...state,\r\n                messages:state.messages.filter(message => message._id !== action.payload)\r\n            }\r\n        }\r\n\r\n        case SEND_MESSAGE:\r\n            return{\r\n                ...state,\r\n                message : [action.payload , ...state.messages]\r\n            };\r\n\r\n        default:\r\n                return state;\r\n    }\r\n}","import {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL\r\n}  from '../Actions/types' ;\r\n\r\nconst initialState = {\r\n    token : localStorage.getItem('token'),\r\n    isAuthenticated : null,\r\n    isLoading : false ,\r\n    user : null\r\n};\r\n\r\nexport default function( state = initialState ,action) {\r\n    switch(action.type){\r\n        case USER_LOADING :\r\n            return {\r\n                ...state ,\r\n                isLoading : true\r\n            };\r\n\r\n        case USER_LOADED : \r\n            return  {\r\n                ...state ,\r\n                isAuthenticated : true,\r\n                isLoading :false ,\r\n                user : action.payload\r\n            };\r\n\r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_SUCCESS:\r\n        localStorage.setItem('token' ,action.payload.token);\r\n            return {\r\n                ...state ,\r\n                ...action.payload,\r\n                isAuthenticated : true,\r\n                isLoading : false\r\n            };\r\n        \r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_FAIL:\r\n        localStorage.removeItem('token');\r\n            return {\r\n                ...state ,\r\n                token : null ,\r\n                user : null ,\r\n                isAuthenticated : false ,\r\n                isLoading : false\r\n            }\r\n        default :\r\n        return state;\r\n    }\r\n}","import { GET_ERRORS ,CLEAR_ERRORS } from '../Actions/types'\r\n\r\nconst initialState = {\r\n    msg : {},\r\n    status :null,\r\n    id :null\r\n}\r\n\r\nexport default function (state = initialState , action){\r\n    switch (action.type){\r\n        case GET_ERRORS :\r\n            return {\r\n                msg : action.payload.msg,\r\n                status:action.payload.status,\r\n                id:action.payload.id\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                msg : {},\r\n                status : null,\r\n                id:null\r\n            }    \r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport messageReducer from './messageReducer';\r\nimport authReducer from './authReducer';\r\nimport errorReducer from './errorReducer'\r\n\r\nexport default combineReducers(\r\n    { \r\n        message : messageReducer,\r\n        error : errorReducer,\r\n        auth : authReducer\r\n    }\r\n);","import { createStore , applyMiddleware , compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './Reducers'\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n        rootReducer ,\r\n        initialState ,\r\n        compose(\r\n            applyMiddleware(...middleware),\r\n            window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        )\r\n    );\r\n\r\n    export default store;","import {GET_ERRORS , CLEAR_ERRORS } from './types';\r\n\r\n//Return Errors \r\nexport const returnErrors = ( msg ,status , id = null ) => {\r\n    return {\r\n        type : GET_ERRORS ,\r\n        payload : { msg ,status , id}\r\n    };\r\n};\r\n\r\n//Clear Errors \r\nexport const clearErrors = () => {\r\n    return {\r\n        type : CLEAR_ERRORS\r\n    };\r\n};","import axios from 'axios'\r\nimport {returnErrors} from './errorActions'\r\n\r\nimport {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL\r\n}  from './types' ;\r\n\r\n//check token & load user \r\nexport const loadUser = () => (dispatch ,getState) => {\r\n    //user loading\r\n    dispatch({ type : USER_LOADING});\r\n\r\n    axios.get('/api/auth/user' , tokenConfig(getState) )\r\n    .then( res => dispatch({\r\n        type:USER_LOADED,\r\n        payload:res.data\r\n    }))\r\n    .catch(err => {\r\n        dispatch(returnErrors(err.response.data , err.response.status));\r\n        dispatch ({\r\n            type :AUTH_ERROR\r\n        });\r\n    });\r\n};\r\n\r\n//Register user\r\nexport const register = ({name ,email ,password}) => dispatch => {\r\n    //Headers\r\n    const config = {\r\n        headers : {\r\n            'Content-Type' : 'application/json'\r\n        }\r\n    }\r\n    //Request body \r\n    const body = JSON.stringify({name , email , password});\r\n\r\n    axios.post('/api/users' ,body , config)\r\n    .then(res => dispatch({\r\n        type : REGISTER_SUCCESS,\r\n        payload:res.data\r\n    }))\r\n    .catch(err => {\r\n        dispatch(returnErrors(err.response.data , err.response.status ,'REGISTER_FAIL'));\r\n        dispatch({\r\n            type : REGISTER_FAIL\r\n        });\r\n    });\r\n}\r\n\r\n//Login User\r\nexport const login = ({email ,password}) => dispatch => {\r\n    //Headers\r\n    const config = {\r\n        headers : {\r\n            'Content-Type' : 'application/json'\r\n        }\r\n    }\r\n    //Request body \r\n    const body = JSON.stringify({ email , password});\r\n\r\n    axios.post('/api/auth' ,body , config)\r\n    .then(res => dispatch({\r\n        type : LOGIN_SUCCESS,\r\n        payload:res.data\r\n    }))\r\n    .catch(err => {\r\n        dispatch(returnErrors(err.response.data , err.response.status ,'LOGIN_FAIL'));\r\n        dispatch({\r\n            type : LOGIN_FAIL\r\n        });\r\n    });\r\n}\r\n\r\n//Setup config/headers and token\r\nexport const tokenConfig = getState => {\r\n      //Get token from localStorage\r\n    const token = getState().auth.token;\r\n\r\n    //Headers\r\n    const config = {\r\n        headers : {\r\n            \"Content-type\" : \"application/json\"\r\n        }\r\n    }\r\n\r\n    //If token add to header\r\n    if(token){\r\n        config.headers['x-auth-token'] = token ;\r\n    }\r\n\r\n    return config;\r\n}","import './App.css';\nimport Blogs from './Components/Blogs';\nimport Contact from './Components/Contact';\nimport Home from './Components/Home';\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom'\nimport Nav from './Components/Nav';\nimport Footer from './Components/Footer';\n\n\n//import admin component\nimport Admin from './Components/Admin'\n\n//Routes not included\n//import Register from './Components/auth/Register'\n//import Login from './Components/auth/Login'\n\n\nimport {Provider} from 'react-redux'\nimport store from './store'\nimport { loadUser} from './Actions/authActions';\nimport { Component } from 'react';\n\nclass App extends Component{\n\n  componentDidMount(){\n    store.dispatch(loadUser());\n  }\n\n  render(){\n    return (\n        <Provider store = {store}>\n        <Router>\n          <div className=\"App\">\n            <Nav/>\n            <Switch>\n              <Route  exact path = \"/\" component ={Home} />\n              <Route path = \"/blogs\" component ={Blogs} />\n              <Route path = \"/contact\" component ={Contact} />\n              <Route path = \"/confidential\" component ={Admin} />\n\n              {\n                /* routes not included\n                  <Route path = \"/register\" component ={Register} />\n                  <Route path = \"/login\" component ={Login} />\n                */\n              }\n             \n           </Switch>\n            <Footer />\n          </div>\n        </Router>\n      </Provider>\n    )\n    \n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}